Given two integers ‘a’ and ‘m’, find modular multiplicative inverse of ‘a’ under modulo ‘m’.
The modular multiplicative inverse is an integer ‘x’ such that. 

a x ≅ 1 (mod m) 
The value of x should be in {0, 1, 2, … m-1}, i.e., in the range of integer modulo m.
The multiplicative inverse of “a modulo m” exists if and only if a and m are relatively prime (i.e., if gcd(a, m) = 1).

Examples: 

#include <iostream> 
using namespace std; 
  
// A naive method to find modular multiplicative inverse of 
// 'a' under modulo 'm' 
int modInverse(int a, int m) 
{ 
    a = a % m; 
    for (int x = 1; x < m; x++) 
        if ((a * x) % m == 1) 
            return x; 
} 
  
// Driver code 
int main() 
{ 
    int a = 3, m = 11; 
    
    // Function call 
    cout << modInverse(a, m); 
    return 0; 
}


Output
4
